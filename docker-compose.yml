version: '3.8'

services:
  # Oracle Database (Oracle 23ai Free)
  oracle-db:
    image: container-registry.oracle.com/database/free:latest
    container_name: oracle-23ai-free
    environment:
      - ORACLE_PASSWORD=MyStrongPassword123
      - ORACLE_CHARACTERSET=AL32UTF8
    ports:
      - "1521:1521"
      - "5500:5500"
    volumes:
      - oracle_data:/opt/oracle/oradata
      - ./database_setup.sql:/opt/oracle/scripts/setup/01_setup.sql
    networks:
      - timetracker_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sqlplus", "-L", "sys/MyStrongPassword123@//localhost:1521/FREEPDB1", "as", "sysdba", "<<<", "SELECT 1 FROM DUAL;"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Time Management Application
  timetracker-app:
    build: .
    container_name: timetracker-app
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=your-super-secret-key-change-this-in-production
      - JWT_SECRET_KEY=your-jwt-secret-key-change-this-in-production
      - DATABASE_URL=oracle://system:MyStrongPassword123@oracle-db:1521/FREEPDB1
      - ORACLE_HOST=oracle-db
      - ORACLE_PORT=1521
      - ORACLE_SERVICE=FREEPDB1
      - ORACLE_USERNAME=system
      - ORACLE_PASSWORD=MyStrongPassword123
    ports:
      - "5000:5000"
    volumes:
      - ./logs:/app/logs
    networks:
      - timetracker_network
    depends_on:
      oracle-db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for session management and caching
  redis:
    image: redis:7-alpine
    container_name: timetracker-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - timetracker_network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: timetracker-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - timetracker_network
    depends_on:
      - timetracker-app
    restart: unless-stopped

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: timetracker-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - timetracker_network
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: timetracker-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - timetracker_network
    depends_on:
      - prometheus
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  oracle_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  timetracker_network:
    driver: bridge